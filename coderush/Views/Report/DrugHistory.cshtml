@model coderush.Models.Product
@{
    ViewData["Title"] = "Drug stock";
}
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Main content -->
    <section class="content">
        <!-- Default box -->
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title"><i class="fa fa-building"></i> @ViewData["Title"]</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <!-- /.box-body -->
            <div class="box-body">
                <div id="Grid"></div>
            </div>
        </div>
        <!-- /.box -->

    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->


@section Styles{
}
@section Scripts{
    <script type="text/javascript">

        $(function ()
        {
             var dataManager = ej.DataManager({
                url: "/api/Report/SalesVSPurchase",
                adaptor: new ej.WebApiAdaptor(),
                offline: true
            });
            dataManager.ready.done(function (e) {
            $("#Grid").ejGrid({
                dataSource: ej.DataManager({
                    json: e.result,
                    adaptor: new ej.remoteSaveAdaptor(),

                }),
                toolbarSettings: {
                    showToolbar: true,
                    toolbarItems: ["search", "printGrid"]
                },
                isResponsive: true,
                enableResponsiveRow: true,
                allowSorting: true,
                allowSearching: true,
                allowFiltering: true,
                filterSettings: {
                    filterType: "excel",
                    maxFilterChoices: 100,
                    enableCaseSensitivity: false
                },
                allowPaging: true,
                allowSorting: true,
                allowResizeToFit: true,
                allowResizing: true,
                pageSettings: { pageSize: 10, printMode: ej.Grid.PrintMode.AllPages },
                columns: [
                    { field: "ProductName", headerText: 'Product Name', validationRules: { required: true } },
                    { field: "TotalUnitsSold", headerText: 'Sold', defaultValue: 1, editType: "numericedit", format: "{0:n2}" },
                    { field: "TotalUnitsRecieved", headerText: 'Recieved', defaultValue: 1, editType: "numericedit", format: "{0:n2}" },
                    { field: "TotalUnitsPurchased", headerText: 'Purchased', defaultValue: 1, editType: "numericedit", format: "{0:n2}" },
                    { field: "RemainderStock", headerText: 'Instock', defaultValue: 1, editType: "numericedit", format: "{0:n2}" },
                    { field: "TotalSales", headerText: 'total sales', defaultValue: 1, editType: "numericedit", format: "{0:n2}" },
                    { field: "TotalPurchase", headerText: 'Total Purchase', defaultValue: 1, editType: "numericedit", format: "{0:n2}" },  
                    { field: "Profit", headerText: 'Profit', defaultValue: 1, editType: "numericedit", format: "{0:n2}" },       
                ],
                actionComplete: "complete",
                beforePrint: function (args) {
                    console.log(args)
                },
                actionFailure: function (args) {
                    if (args.requestType == "save") {
                        var s = ej.parseJSON(args.error.responseText)
                        toastr.warning(s.message, "Cannot make sale");
                    }
                    if (args.requestType == 'delete') {
                        var s = ej.parseJSON(args.error.error.responseText)
                        toastr.warning(s.message,"Cannot delete");
                    }
                }
            });
            });


        });


    </script>
}
