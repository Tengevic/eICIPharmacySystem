@model coderush.Models.Product
@{
    ViewData["Title"] = "Drug stock";
}
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Main content -->
    <section class="content">
        <!-- Default box -->
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title"><i class="fa fa-building"></i> @ViewData["Title"]</h3>
                <input id="ProductId" />
                <p id="sendp" style="color: green">Submiting... </p>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <!-- /.box-body -->
            <div class="box">
                <div class="box-header with-border">
                    <h3 class="box-title text-primary"><i class="fa fa-user"></i> SaleHistory</h3>
                    <button onclick="SaleHistoryExcel()">Excel</button>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                                title="Collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                            <i class="fa fa-times"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body">
                    <div id="Grid"></div>
                </div>
            </div>
            <div class="box">
                <div class="box-header with-border">
                    <h3 class="box-title text-primary"><i class="fa fa-key"></i> Recieve history </h3>
                    <button onclick="RecievehistoryExcel()">Excel</button>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                                title="Collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                            <i class="fa fa-times"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body">
                    <div id="GridRecieve"></div>
                </div>
            </div>
            <div class="box">
                <div class="box-header with-border">
                    <h3 class="box-title text-primary"><i class="fa fa-key"></i> Purchase history </h3>
                    <button onclick="PurchasehistoryExcel()">Excel</button>
                    <div class="box-tools pull-right">
                        <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                                title="Collapse">
                            <i class="fa fa-minus"></i>
                        </button>
                        <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                            <i class="fa fa-times"></i>
                        </button>
                    </div>
                </div>
                <div class="box-body">
                    <div id="GridPurchase"></div>
                </div>
            </div>
        </div>
        <!-- /.box -->

    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->


@section Styles{
}
@section Scripts{
    <script type="text/javascript">
        var startDate;
        var endDate;
        var range;
        var drugID;
        function SaleHistoryExcel() {
            location.href = "/api/Report/GetbyProductIdSaleToExcel/" + drugID;
        } 
        function RecievehistoryExcel() {
            location.href = "/api/Report/GetbyProductIdPurchaseToExcel/" + drugID;
        }
        function PurchasehistoryExcel() {
            location.href = "/api/Report/GetbyProductIdRecieveToExcel/" + drugID;
        }
        $(function () {
            $("#sendp").hide();
            var dataManagerProduct = ej.DataManager({
                url: "/api/Product",
                adaptor: new ej.WebApiAdaptor()
            });

            $('#ProductId').ejDropDownList({
                dataSource: dataManagerProduct,
                fields: { id: 'ProductId', text: 'ProductName', value: 'ProductId' },
                change: function (args) {
                    DrugHistory(args.value);
                    drugID = args.value;
                }
            });

        });
        function DrugHistory(id) {
            console.log(id);
            $.ajax({
                type: "GET",
                url: "/api/Report/GetbyProductId/" + id,
                beforeSend: function () {
                    $("#sendp").show();
                    $("#submit").prop('disabled', true);
                },
                success: function (result) {
                    saleHistory(result.saleHistories)
                    purchaseOrderLine(result.purchaseOrderLineVMs)
                    goodsRecievedNoteLine(result.goodsRecievedNoteLineVMs)
                    toastr.success("Succes");
                    $("#sendp").hide();
                    $("#submit").prop('disabled', false);
                },
                error: function (result) {
                    var s = ej.parseJSON(result.responseText)
                    toastr.warning(s.message, "Cannot make sale");
                }
            });
        }
        function saleHistory(data) {

            $("#Grid").ejGrid({
                dataSource: data,
                toolbarSettings: {
                    showToolbar: true,
                    toolbarItems: ["search", "printGrid"]
                },
                isResponsive: true,
                enableResponsiveRow: true,
                allowSorting: true,
                allowSearching: true,
                allowFiltering: true,
                filterSettings: {
                    filterType: "excel",
                    maxFilterChoices: 100,
                    enableCaseSensitivity: false
                },
                allowPaging: true,
                allowSorting: true,
                allowResizeToFit: true,
                allowResizing: true,
                pageSettings: { pageSize: 5, printMode: ej.Grid.PrintMode.AllPages },
                summaryRows: [
                ],
                columns: [
                    { field: "ProductName", headerText: 'Product Name', validationRules: { required: true } },
                    { field: "SaleOrderName", headerText: 'Drug Sale number', allowEditing: false },
                    { field: "CustomerName", headerText: 'Customer Name', validationRules: { required: true } },
                    { field: "NHIF", headerText: 'NHIF', validationRules: { required: true } },
                    { field: "Quanity", headerText: 'Qty', defaultValue: 1, editType: "numericedit", format: "{0:n2}" },
                    { field: "saledate", headerText: 'Sell Date', editType: "datepicker", format: "{0:MM/dd/yyyy}", validationRules: { required: true } },
                    { field: "Total", headerText: 'Total', defaultValue: 0, editParams: { decimalPlaces: 2 }, allowEditing: false, editType: "numericedit", format: "{0:n2}" },
                    { field: "PaymentMode", headerText: 'Payment Mode', validationRules: { required: true } },
                ],
            });
        }
        function goodsRecievedNoteLine(data) {
            console.log(data)
            $("#GridRecieve").ejGrid({
                dataSource: data,
                toolbarSettings: {
                    showToolbar: true,
                    toolbarItems: ["search", "printGrid"]
                },
                isResponsive: true,
                enableResponsiveRow: true,
                allowSorting: true,
                allowSearching: true,
                allowFiltering: true,
                filterSettings: {
                    filterType: "excel",
                    maxFilterChoices: 100,
                    enableCaseSensitivity: false
                },
                allowPaging: true,
                allowSorting: true,
                allowResizeToFit: true,
                allowResizing: true,
                pageSettings: { pageSize: 5, printMode: ej.Grid.PrintMode.AllPages },
                summaryRows: [
                ],
                columns: [
                    { field: "BatchID", headerText: 'BatchID', validationRules: { required: true } },
                    { field: "Quantity", headerText: 'units/batch', defaultValue: 1, editType: "numericedit", format: "{0:n2}", editParams: { decimalPlaces: 2 } },
                    { field: "GoodsReceivedNoteName", headerText: 'Drug Recieve#', allowEditing: false },
                    { field: "PurchaseOrdername", headerText: 'Purchase Order', allowEditing: false },
                    { field: "GRNDate", headerText: 'Receiving Date', editType: "datepicker", format: "{0:MM/dd/yyyy}", validationRules: { required: true } },
                    { field: "ExpiryDate", headerText: 'Expiry Date', editType: "datepicker", format: "{0:MM/dd/yyyy}", validationRules: { required: true } },
                    { field: "Sold", headerText: 'Units sold', defaultValue: 0, editType: "numericedit", allowEditing: false, visible: false },
                    { field: "InStock", headerText: ' stock', defaultValue: 0, editType: "numericedit", allowEditing: false, visible: false },
                    { field: "Expired", headerText: ' Expired ', defaultValue: 0, editType: "numericedit", allowEditing: false, visible: false },
                ],
            });
        }
        function purchaseOrderLine(data) {
            console.log(data)
            $("#GridPurchase").ejGrid({
                dataSource: data,
                toolbarSettings: {
                    showToolbar: true,
                    toolbarItems: ["search", "printGrid"]
                },
                isResponsive: true,
                enableResponsiveRow: true,
                allowSorting: true,
                allowSearching: true,
                allowFiltering: true,
                filterSettings: {
                    filterType: "excel",
                    maxFilterChoices: 100,
                    enableCaseSensitivity: false
                },
                allowPaging: true,
                allowSorting: true,
                allowResizeToFit: true,
                allowResizing: true,
                pageSettings: { pageSize: 5, printMode: ej.Grid.PrintMode.AllPages },
                summaryRows: [
                ],
                columns: [
                    { field: "PurchaseOrderName", headerText: 'Purchase Order', allowEditing: false },
                    { field: "VendorName", headerText: 'Vendor Name' },
                    { field: "Quantity", headerText: 'Quantity', defaultValue: 1, editType: "numericedit", format: "{0:n2}" },
                    { field: "Total", headerText: 'total', defaultValue: 1, editType: "numericedit", format: "{0:n2}" },
                    { field: "OrderDate", headerText: 'Order Date', editType: "datepicker", format: "{0:MM/dd/yyyy}"},
                    { field: "DeliveryDate", headerText: 'Delivery Date', editType: "datepicker", format: "{0:MM/dd/yyyy}"},
                ],
                actionComplete: function (args) {
                    console.log(args)
                }
            });
        }
    </script>
}
