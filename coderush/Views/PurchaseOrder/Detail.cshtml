@model coderush.Models.PurchaseOrder

@{
    ViewData["Title"] = "Purchase Detail";
}

<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">

    <!-- Main content -->
    <section class="content">
        <!-- Default box -->
        <div class="row">
            <div class="col-lg-6">
                <div class="box">
                    <div class="box-header with-border">
                        <h3 class="box-title"><i class="fa fa-building"></i> @ViewData["Title"]</h3>
                        <button onclick="PrintPanel()">
                        <i class="fa fa-print"></i></button>
                        <div class="box-tools pull-right">
                            <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                                    title="Collapse">
                                <i class="fa fa-minus"></i>
                            </button>
                            <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                                <i class="fa fa-times"></i>
                            </button>
                        </div>
                    </div>
                    <div class="box-body">
                        <div class="content-container-fluid" style="height: 150px;">
                            <div class="row">
                                <dl class="dl-horizontal">
                                    <dt>
                                        @Html.DisplayNameFor(model => model.PurchaseOrderId)
                                    </dt>
                                    <dd>
                                        @Html.DisplayFor(model => model.PurchaseOrderId)
                                    </dd>
                                    <dt>
                                        @Html.DisplayNameFor(model => model.PurchaseOrderName)
                                    </dt>
                                    <dd>
                                        @Html.DisplayFor(model => model.PurchaseOrderName)
                                    </dd>
                                    @*<dt>
                                    @Html.DisplayNameFor(model => model.BranchId)
                                </dt>
                                <dd>
                                    <input type="text" id="BranchId" />
                                </dd>*@
                                    <dt>
                                        @Html.DisplayNameFor(model => model.VendorId)
                                    </dt>
                                    <dd>
                                        <input type="text" id="VendorId" />
                                    </dd>
                                    <dt>
                                        @Html.DisplayNameFor(model => model.OrderDate)
                                    </dt>
                                    <dd>
                                        @Html.DisplayFor(model => model.OrderDate)
                                    </dd>
                                    <dt>
                                        @Html.DisplayNameFor(model => model.DeliveryDate)
                                    </dt>
                                    <dd>
                                        @Html.DisplayFor(model => model.DeliveryDate)
                                    </dd>
                                    <dt>
                                        Recieved Drugs
                                    </dt>
                                    @if (!Model.fullyPaid)
                                    {
                                        <dd>
                                            <button id="btnRecieve" onclick="Recieve()">Recieve Drugs</button>
                                        </dd>
                                    }
                                    else
                                    {
                                        <dd>
                                            Fully Recieved
                                        </dd>
                                    }
                                    @*<dt>
                                    @Html.DisplayNameFor(model => model.CurrencyId)
                                </dt>
                                <dd>
                                    <input type="text" id="CurrencyId" />
                                </dd>
                                <dt>
                                    @Html.DisplayNameFor(model => model.PurchaseTypeId)
                                </dt>
                                <dd>
                                    <input type="text" id="PurchaseTypeId" />
                                </dd>*@


                                </dl>
                               
                            </div>

                        </div>

                    </div>
                </div>
            </div>
            @if (Model.GoodsReceivedNote.Count == 0)
            {
                <div class="col-lg-6">
                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title text-primary"><i class="fa fa-pie-chart"></i> order Details</h3>
                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                                        title="Collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                                    <i class="fa fa-times"></i>
                                </button>
                            </div>
                        </div>
                        <div class="box-body">
                            <table class="table table-bordered table-striped mb-0">
                                <tr>
                                    <td>
                                        Drug Name
                                    </td>
                                    <td>
                                        <label id="ProductId" name="ProductId"></label>
                                    </td>
                                    <td>
                                        Units of Measure:
                                    </td>
                                    <td>
                                        <label id="UnitsofMeasure" name="UnitsofMeasure"></label>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        Generic type
                                    </td>
                                    <td>
                                        <label id="genericType" name="genericType"></label>
                                    </td>
                                </tr>
                                <tr>
                                    <td>
                                        Quantity:
                                    </td>
                                    <td>
                                        <label id="Quantity" name="Quantity"></label>
                                    </td>

                                    <td>
                                        Buying Price
                                    </td>
                                    <td>
                                        <label id="buyingPrice" name="sellPrice"></label>
                                    </td>
                                </tr>
                                <tr>

                                    <td>
                                        Amount
                                    </td>
                                    <td>
                                        <label id="Cost" name="cost"></label>
                                    </td>
                                </tr>

                            </table>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="col-lg-6">
                    <div class="box">
                        <div class="box-header with-border">
                            <h3 class="box-title text-primary"><i class="fa fa-pie-chart"></i> order Details</h3>
                            <div class="box-tools pull-right">
                                <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                                        title="Collapse">
                                    <i class="fa fa-minus"></i>
                                </button>
                                <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                                    <i class="fa fa-times"></i>
                                </button>
                            </div>
                        </div>
                        <div class="box-body">
                            <div class="PurchaseOrder">
                                <div class="table-wrapper-scroll-y my-custom-scrollbar">
                                    <table id="Prescription" align="center" class="table-condensed table-bordered table-striped mb-0" style="width:100%">
                                        <thead>
                                            <tr>
                                                <th>Recieve Name</th>
                                                <th>Vendor Invoice</th>
                                                <th>Date</th>
                                                <th>Link</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach(GoodsReceivedNote goodsReceivedNote in Model.GoodsReceivedNote)
                                                {
                                               <tr>
                                                   <td>@goodsReceivedNote.GoodsReceivedNoteName</td>
                                                   <td>@goodsReceivedNote.VendorInvoiceNumber</td>
                                                   <td>@goodsReceivedNote.GRNDate</td>
                                                   <td><a href="/GoodsReceivedNote/Detail/@goodsReceivedNote.GoodsReceivedNoteId"  >Detail</a></td>
                                               </tr>
                                                }
                                            
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            }

        </div>
        <!-- /.box -->
        <div class="box">
            <div class="box-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div id="Grid"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-8">

                    </div>
                    <div class="col-lg-4">
                        <dl class="dl-horizontal">
                            <dt>
                                @Html.DisplayNameFor(model => model.Remarks)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.Remarks)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.Amount)
                            </dt>
                            <dd>
                                <label id="Amount" name="Amount">@Model.Amount</label>
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.Discount)
                            </dt>
                            <dd>
                                <label id="Discount" name="Discount">@Model.Discount</label>
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.SubTotal)
                            </dt>
                            <dd>
                                <label id="SubTotal" name="SubTotal">@Model.SubTotal</label>
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.Tax)
                            </dt>
                            <dd>
                                <label id="Tax" name="Tax">@Model.Tax</label>
                            </dd>
                            @*<dt>
                                @Html.DisplayNameFor(model => model.Freight)
                            </dt>
                            <dd>
                                <label id="Freight" name="Freight">@Model.Freight</label>
                            </dd>*@
                            <dt>
                                @Html.DisplayNameFor(model => model.Total)
                            </dt>
                            <dd>
                                <label id="Total" name="Total">@Model.Total</label>
                            </dd>
                        </dl>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->
<div id="dialog">
    <table class="table-condensed">
        <tr>
            <td>
                Purchase order
            </td>
            <td>
                @Model.PurchaseOrderName
            </td>
            <td>
                Fully Recieved
            </td>
            <td>
                <input id="IsFullReceive" />
            </td>
        </tr>
        <tr>
            <td>
                Recieve date
            </td>
            <td>
                <input id="Recievedate" />
            </td>
        </tr>
        <tr>
            <td>
                VendorDONumber
            </td>
            <td>
                <input id="VendorDONumber" type="text"/>
            </td>
            <td>
                VendorInvoiceNumber
            </td>
            <td>
                <input id="VendorInvoiceNumber" type="text"/>
            </td>
        </tr>
        <tr>
            <td>
                <button id="btnSubmit" onclick="Submit()">Submit</button>
            </td>
            <td>
                <p id="sendp" style="color: green">Submiting... </p>
            </td>
        </tr>
    </table>

</div>



@section Styles{

}

@section Scripts{

    <script type="text/javascript">
        var Drugs;
        var Quantity;
        var recievedate;
        var IsFullReceive = false;

        function PrintPanel() {
            var message;
            $.ajax({
                type: 'GET',
                url: '/api/PurchaseOrder/Print/' + @Model.PurchaseOrderId,
                success: function (data) {
                    message = data;
                    var printWindow = window.open('', '', 'height=400,width=800');
                    printWindow.document.write(message);
                    printWindow.document.close();
                    setTimeout(function () {
                        printWindow.print();
                    }, 500);
                    return false;
                }
            });
            
        }
        // submit drug recieve to the database
        function Submit() {
            data = {
                PurchaseOrderId: @Model.PurchaseOrderId,
                GRNDate: recievedate,
                VendorDONumber: $("#VendorDONumber").val(),
                VendorInvoiceNumber: $("#VendorInvoiceNumber").val(),
                WarehouseId: 1,
                IsFullReceive: IsFullReceive,
            }
            if (data.GRNDate == null) {
                toastr.warning("Select a date")
            } else if (data.VendorInvoiceNumber == "") {
                toastr.warning("Please enter Vendor Invoice number")
            } else {
                $.ajax({
                    type: "POST",
                    contentType: "application/json;charset=utf-8",
                    data: JSON.stringify(data),
                    url: "/api/GoodsReceivedNote/Add",
                    beforeSend: function () {
                        $("#sendp").show();
                        $("#btnSubmit").prop('disabled', true);
                    },
                    success: function (result) {
                        $("#sendp").hide();
                        $("#btnSubmit").prop('disabled', false);
                        toastr.success("Success");

                    },
                    error: function (result) {
                        $("#sendp").hide();
                        var s = ej.parseJSON(result.responseText)
                        toastr.warning(s.message);
                        $("#btnSubmit").prop('disabled', false);
                    }
                });
            }


        }
        // opens drug recieve dialog box
        function Recieve() {
            $("#dialog").ejDialog("open");
            $("#sendp").hide();
            $("#Recievedate").ejDatePicker({
                width: "75%",
                change: function (args) {
                    recievedate = args.value;
                }
            });
            $("#IsFullReceive").ejCheckBox({
                change: function (args) {
                    IsFullReceive = args.isChecked;
                }
            });
        }
        // changes the cost amount
        function NewAmount(x) {
            Amount = x * Quantity;
            $("#Cost").text(Amount);
        }
        $(function () {
            $("#sendp").hide();
            $('#dialog').ejDialog({
                title: "Add Record",
                showOnInit: false,
                width: 700,
                close: function (args) {
                    location.reload();
                }

            });
            var dataManager = ej.DataManager({
                url: "/api/PurchaseOrderLine",
                adaptor: new ej.WebApiAdaptor(),
                headers: [{ "PurchaseOrderId": @Model.PurchaseOrderId}],
                offline: true,
            });

            var dataManagerProduct = ej.DataManager({
                url: "/api/Product",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerPurchaseOrder = ej.DataManager({
                url: "/api/PurchaseOrder",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerBranch = ej.DataManager({
                url: "/api/Branch",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerVendor = ej.DataManager({
                url: "/api/Vendor",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerCurrency = ej.DataManager({
                url: "/api/Currency",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerPurchaseType = ej.DataManager({
                url: "/api/PurchaseType",
                adaptor: new ej.WebApiAdaptor()
            });

            $('#ProductId').ejDropDownList({
                dataSource: dataManagerProduct,
                fields: { id: 'ProductId', text: 'ProductName', value: 'ProductId' },
                change: function (args) {
                    productId = args.value;
                    $.ajax({
                        type: 'GET',
                        url: '/api/Product/GetProductbyId/' + productId,
                        success: function (data) {
                            Drugs = data;

                        }
                    });
                }
            });

            $('#BranchId').ejDropDownList({
                dataSource: dataManagerBranch,
                fields: { id: 'BranchId', text: 'BranchName', value: 'BranchId' },
                value: @Model.BranchId,
                enabled: false,
            });

            $('#VendorId').ejDropDownList({
                dataSource: dataManagerVendor,
                fields: { id: 'VendorId', text: 'VendorName', value: 'VendorId' },
                value: @Model.VendorId,
            });

            $('#CurrencyId').ejDropDownList({
                dataSource: dataManagerCurrency,
                 fields: { id: 'CurrencyId', text: 'CurrencyName', value: 'CurrencyId' },
                value: @Model.CurrencyId,
                enabled: false,
            });

            $('#PurchaseTypeId').ejDropDownList({
                dataSource: dataManagerPurchaseType,
                fields: { id: 'PurchaseTypeId', text: 'PurchaseTypeName', value: 'PurchaseTypeId' },
                value: @Model.PurchaseTypeId,
                enabled: false,
            });

            dataManager.ready.done(function (e) {

            $("#Grid").ejGrid({
                dataSource: ej.DataManager({
                    json: e.result,
                    adaptor: new ej.remoteSaveAdaptor(),
                    insertUrl: "/api/PurchaseOrderLine/Insert",
                    updateUrl: "/api/PurchaseOrderLine/Update",
                    removeUrl: "/api/PurchaseOrderLine/Remove",
                }),
                toolbarSettings: {
                    showToolbar: true,
                    toolbarItems: ["add", "delete", "update", "cancel"]
                },
                editSettings: {
                    allowEditing: false,
                    allowAdding: true,
                    allowDeleting: true,
                    showDeleteConfirmDialog: true,

                },
                allowPaging: true,
                columns: [
                    { field: "PurchaseOrderLineId", headerText: 'Line Id', isPrimaryKey: true, isIdentity: true, visible: false },
                    { field: "PurchaseOrderId", headerText: 'PO#', defaultValue: @Model.PurchaseOrderId, foreignKeyField: "PurchaseOrderId", foreignKeyValue: "PurchaseOrderName", dataSource: dataManagerPurchaseOrder, visible: false },
                    { field: "ProductId", headerText: 'Drug', foreignKeyField: "ProductId", foreignKeyValue: "ProductName", dataSource: dataManagerProduct },
                    { field: "Description", headerText: 'Description' , visible: false},
                    { field: "Quantity", headerText: 'units', defaultValue: 1, editType: "numericedit", editParams: { decimalPlaces: 2 }, format: "{0:n2}"  ,decimalPlaces: 2},
                    { field: "Price", headerText: 'Price', defaultValue: 0, editType: "numericedit", editParams: { decimalPlaces: 2 }, format: "{0:n2}" },
                    { field: "Amount", headerText: 'Amount', defaultValue: 0, allowEditing: false, editParams: { decimalPlaces: 2 }, editType: "numericedit", format: "{0:n2}" },
                    { field: "DiscountPercentage", headerText: 'Disc %', defaultValue: 0, editType: "numericedit", editParams: { decimalPlaces: 2 }, format: "{0:n2}" },
                    { field: "DiscountAmount", headerText: 'Disc Amt', defaultValue: 0, visible: false, editType: "numericedit", editParams: { decimalPlaces: 2 }, format: "{0:n2}" },
                    { field: "SubTotal", headerText: 'SubTotal', defaultValue: 0, allowEditing: false, editType: "numericedit", editParams: { decimalPlaces: 2 }, format: "{0:n2}" },
                    { field: "TaxPercentage", headerText: 'Tax %', defaultValue: 0, editType: "numericedit", editParams: { decimalPlaces: 2 }, format: "{0:n2}" },
                    { field: "TaxAmount", headerText: 'Tax Amt', defaultValue: 0, visible: false, editType: "numericedit", editParams: { decimalPlaces: 2 }, format: "{0:n2}" },
                    { field: "Total", headerText: 'Total', defaultValue: 0, allowEditing: false, editType: "numericedit", editParams: { decimalPlaces: 2 }, format: "{0:n2}" },
                ],
                actionComplete: "complete",
                actionFailure: function (args) {
                    if (args.requestType == "save") {
                        var s = ej.parseJSON(args.error.responseText)
                        toastr.warning(s.message, "Cannot Order");
                    }
                    if (args.requestType == 'delete') {
                        var s = ej.parseJSON(args.error.error.responseText)
                        toastr.warning(s.message, "Cannot delete");
                    }
                }
            });

            });

        });
        function complete(args) {

            if (args.requestType == 'beginedit') {
                $("#" + this._id + "_dialogEdit").ejDialog({ title: "Edit Record" });
            }
            if (args.requestType == 'save' || args.requestType == 'delete') {
                UpdateGrid()
                RewriteTotal(args.data.PurchaseOrderId);
            }
            if (args.requestType == 'beginedit' || args.requestType == 'add') {
                $('#GridProductId').ejDropDownList({
                    change: function (args) {
                        $.ajax({
                            type: 'GET',
                            url: '/api/Product/GetProductbyId/' + args.value,
                            success: function (data) {
                                Drugs = data;
                                $('#GridPrice').ejNumericTextbox({ value: data.DefaultBuyingPrice });
                                $("#genericType").text(data.ProductType.ProductTypeName);
                                $("#ProductId").text(data.ProductName);
                                $("#UnitsofMeasure").text(data.UnitOfMeasure.UnitOfMeasureName);
                                $("#instock").text(data.InStock);
                                $("#buyingPrice").text(data.DefaultBuyingPrice);
                                $("#Quantity").text(0);
                            }
                        });
                    }
                });
                $('#GridQuantity').ejNumericTextbox({
                    change: function (args) {
                        $("#Quantity").text(args.value)
                        Quantity = args.value;
                    }
                });
                $('#GridPrice').ejNumericTextbox({
                    change: function (args) {
                        $("#buyingPrice").text(args.value)
                        NewAmount(args.value);
                    }
                });
            }
        }
        function RewriteTotal(purchaseOrderId) {
            $.ajax({
                type: 'GET',
                url: '/api/PurchaseOrder/GetById/' + purchaseOrderId,
                success: function (data) {
                    $('#Amount').text(data.Amount);
                    $('#SubTotal').text(data.SubTotal);
                    $('#Discount').text(data.Discount);
                    $('#Tax').text(data.Tax);
                    $('#Freight').text(data.Freight);
                    $('#Total').text(data.Total);
                }
            });
        }



    </script>
}

