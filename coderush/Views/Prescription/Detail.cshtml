@model coderush.Models.Prescription
@{
    ViewData["Title"] = "Prescription Drugs";
}
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Main content -->
    <section class="content">
        <!-- Default box -->
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title"><i class="fa fa-building"></i> @ViewData["Title"]</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="content-container-fluid">
                    <div class="row">
                        <dl class="dl-horizontal">
                            <dt>
                                @Html.DisplayNameFor(model => model.PrescriptionId)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.PrescriptionId)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.PrescriptionName)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.PrescriptionName)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.Customer.CustomerName)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.Customer.CustomerName)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.presciptionDate)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.presciptionDate)
                            </dd>
                        </dl>
                    </div>

                </div>
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.box -->
        <div class="box">
            <div class="box-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div id="Grid"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-8">
                    </div>
                    <div class="col-lg-4">

                    </div>
                </div>
            </div>
        </div>

    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->


@section Styles{
}
@section Scripts{
    <script type="text/javascript">
        $(function () {

            var dataManager = ej.DataManager({
                url: "/api/PrescriptionLines",
                adaptor: new ej.WebApiAdaptor(),
                headers: [{ "PrescriptionId": @Model.PrescriptionId}],
                offline: true,
            });

            var dataManagerProduct = ej.DataManager({
                url: "/api/Product",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerPrescription = ej.DataManager({
                url: "/api/Prescription",
                adaptor: new ej.WebApiAdaptor()
            });




            dataManager.ready.done(function (e) {
            $("#Grid").ejGrid({
                dataSource: ej.DataManager({
                    json: e.result,
                    adaptor: new ej.remoteSaveAdaptor(),
                    insertUrl: "/api/PrescriptionLines/Insert",
                    updateUrl: "/api/PrescriptionLines/Update",
                    removeUrl: "/api/PrescriptionLines/Remove",
                }),
                toolbarSettings: {
                    showToolbar: true,
                    toolbarItems: ["add", "edit", "delete", "update", "cancel"]
                },
                editSettings: {
                    allowEditing: true,
                    allowAdding: true,
                    allowDeleting: true,
                    showDeleteConfirmDialog: true,
                },
                allowPaging: true,
                columns: [
                    { field: "PrescriptionLinesId", headerText: 'Line Id', isPrimaryKey: true, isIdentity: true, visible: false },
                    { field: "PrescriptionId", headerText: 'PS#', defaultValue: @Model.PrescriptionId, foreignKeyField: "PrescriptionId", foreignKeyValue: "PrescriptionName", dataSource: dataManagerPrescription, visible: false },
                    { field: "ProductId", headerText: 'Drug', foreignKeyField: "ProductId", foreignKeyValue: "ProductName", dataSource: dataManagerProduct },
                    { field: "Quantity", headerText: 'units/batch', defaultValue: 1, editType: "numericedit"},
                    { field: "remainder", headerText: 'Units sold', defaultValue: 0, editType: "numericedit", allowEditing: false, visible: false  },
                  
                ],

               
            });
            });


        });


    </script>
}
