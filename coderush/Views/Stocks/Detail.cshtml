@model coderush.Models.Product
@{
    ViewData["Title"] = "Drug stock";
}
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Main content -->
    <section class="content">
        <!-- Default box -->
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title"><i class="fa fa-building"></i> @ViewData["Title"]</h3>
                <button onclick="myFunction()">Update Stock</button>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="content-container-fluid">
                    <div class="row">
                        <dl class="dl-horizontal">
                            <dt>
                                @Html.DisplayNameFor(model => model.ProductName)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.ProductName)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.TotalRecieved)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.TotalRecieved)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.TotalSales)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.TotalSales)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.InStock)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.InStock)
                            </dd>
                        </dl>
                    </div>
               
                </div>
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.box -->
        <div class="box">
            <div class="box-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div id="Grid"></div>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-8">
                    </div>
                    <div class="col-lg-4">

                    </div>
                </div>
            </div>
        </div>

    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->


@section Styles{
}
@section Scripts{
    <script type="text/javascript">

        function myFunction() {
            $.ajax({
                url: "/api/Product/UpdateStock/" +@Model.ProductId,
                type: "POST",
                success: function (result) {
                    console.log(result);
                    location.reload();
                },

            });
        }
        $(function () {

            var dataManager = ej.DataManager({
                url: "/api/GoodsRecievedNoteLines",
                adaptor: new ej.WebApiAdaptor(),
                headers: [{ "ProductId": @Model.ProductId}],
                offline: true,
            });

            var dataManagerProduct = ej.DataManager({
                url: "/api/Product",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerGoodsReceivedNote = ej.DataManager({
                url: "/api/GoodsReceivedNote",
                adaptor: new ej.WebApiAdaptor()
            });

            dataManager.ready.done(function (e) {
            $("#Grid").ejGrid({
                dataSource: ej.DataManager({
                    json: e.result,
                    adaptor: new ej.remoteSaveAdaptor(),

                }),
                toolbarSettings: {
                    showToolbar: true,
                    toolbarItems: ["search", "printGrid"]
                },
                isResponsive: true,
                enableResponsiveRow: true,
                allowSorting: true,
                allowSearching: true,
                allowFiltering: true,
                filterSettings: {
                    filterType: "excel",
                    maxFilterChoices: 100,
                    enableCaseSensitivity: false
                },
                allowPaging: true,
                allowResizeToFit: true,
                allowResizing: true,
                columns: [
                    { headerText: 'Change Stock', template: "<a href='/Stocks/changeStock/{{:GoodsRecievedNoteLineId}}'>Change</a>" },
                    { field: "GoodsRecievedNoteLineId", headerText: 'Line Id', isPrimaryKey: true, isIdentity: true, visible: false },
                    { field: "GoodsReceivedNoteId", headerText: 'GNR#', foreignKeyField: "GoodsReceivedNoteId", foreignKeyValue: "GoodsReceivedNoteName", dataSource: dataManagerGoodsReceivedNote, visible: false },
                    { field: "Dispose", headerText: 'Dispose', allowEditing: false, type: "boolean", editType: "booleanedit", defaultValue: false, visible: false },
                    { field: "ProductId", headerText: 'Drug', foreignKeyField: "ProductId", foreignKeyValue: "ProductName", dataSource: dataManagerProduct, visible: false },
                    { field: "BatchID", headerText: 'BatchID' },
                    { field: "Description", headerText: 'Description', visible: false },
                    { field: "ManufareDate", headerText: 'Manufacture Date', editType: "datepicker", format: "{0:MM/dd/yyyy}", validationRules: { required: true } },
                    { field: "ExpiryDate", headerText: 'Expiry Date', editType: "datepicker", format: "{0:MM/dd/yyyy}", validationRules: { required: true } },
                    { field: "Quantity", headerText: 'units/batch', defaultValue: 1, editType: "numericedit"},
                    { field: "Sold", headerText: 'Units sold', defaultValue: 0, editType: "numericedit", allowEditing: false },
                    { field: "InStock", headerText: ' stock', defaultValue: 0, editType: "numericedit", allowEditing: false },
                    { field: "Expired", headerText: ' Expired ', defaultValue: 0, editType: "numericedit", allowEditing: false },
                    { field: "changestock", headerText: ' change ', defaultValue: 0, editType: "numericedit", allowEditing: false },
                ],
            });
            });


        });


    </script>
}
