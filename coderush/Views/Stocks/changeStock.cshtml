@model coderush.Models.GoodsRecievedNoteLine
@{
    ViewData["Title"] = "Drug stock";
}
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Main content -->
    <section class="content">
        <!-- Default box -->
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title"><i class="fa fa-building"></i> @ViewData["Title"]</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="content-container-fluid">
                    <div class="row">
                        <dl class="dl-horizontal">
                            <dt>
                                @Html.DisplayNameFor(model => model.Product.ProductName)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.Product.ProductName)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.BatchID)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.BatchID)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.Quantity)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.Quantity)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.InStock)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.InStock)
                            </dd>
                        </dl>
                    </div>
                </div>
            </div>
            <!-- /.box-body -->
        </div>
        <!-- /.box -->
        <div class="box">
            <div class="box-body">
                <div id="Grid"></div>
            </div>
        </div>

    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->


@section Styles{
}
@section Scripts{
    <script type="text/javascript">

        $(function () {

            var dataManager = ej.DataManager({
                url: "/api/stockNumber",
                adaptor: new ej.WebApiAdaptor(),
                headers: [{ "GoodsRecievedNoteLineId": @Model.GoodsRecievedNoteLineId}],
                offline: true,
            });

            var dataManagerUser = ej.DataManager({
                url: "/api/User",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerGoodsReceivedNote = ej.DataManager({
                url: "/api/GoodsRecievedNoteLines",
                adaptor: new ej.WebApiAdaptor()
            });

            dataManager.ready.done(function (e) {
            $("#Grid").ejGrid({
                dataSource: ej.DataManager({
                    json: e.result,
                    adaptor: new ej.remoteSaveAdaptor(),
                    insertUrl: "/api/stockNumber/Insert",
                    updateUrl: "/api/stockNumber/Update",
                    removeUrl: "/api/stockNumber/Remove",

                }),
                toolbarSettings: {
                    showToolbar: true,
                    toolbarItems: ["add", "delete", "update", "cancel"]
                },
                editSettings: {
                    allowEditing: false,
                    allowAdding: true,
                    allowDeleting: true,
                    showDeleteConfirmDialog: true,
                },
                isResponsive: true,
                enableResponsiveRow: true,
                allowSorting: true,
                allowSearching: true,
                allowFiltering: true,
                filterSettings: {
                    filterType: "excel",
                    maxFilterChoices: 100,
                    enableCaseSensitivity: false
                },
                allowPaging: true,
                allowResizeToFit: true,
                allowResizing: true,
                columns: [
                    { field: "stockNumberId", headerText: 'Line Id', isPrimaryKey: true, isIdentity: true, visible: false },
                    { field: "GoodsReceivedNoteId", headerText: 'GNR#', defaultValue: @Model.GoodsRecievedNoteLineId, foreignKeyField: "GoodsReceivedNoteId", foreignKeyValue: "GoodsReceivedNoteName", dataSource: dataManagerGoodsReceivedNote, visible: false },
                    { field: "UserId", headerText: 'User', foreignKeyField: "UserId", foreignKeyValue: "FirstName", dataSource: dataManagerUser, allowEditing: false },
                    { field: "Description", headerText: 'Reason', validationRules: { required: true }},
                    { field: "date", headerText: 'Date', editType: "datepicker", format: "{0:MM/dd/yyyy}", validationRules: { required: true } },
                    { field: "Add", headerText: 'add', defaultValue: 0, editType: "numericedit"},
                    { field: "subtract", headerText: 'subtract', defaultValue: 0, editType: "numericedit"},

                ],
                actionBegin: function (args) {
                    console.log(args)
                },
            });
            });


        });


    </script>
}
