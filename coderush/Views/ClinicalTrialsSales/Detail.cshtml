@model coderush.Models.ClinicalTrialsSales
@{
    ViewData["Title"] = "Use IP";
}
<!-- Content Wrapper. Contains page content -->
<div class="content-wrapper">
    <!-- Main content -->
    <section class="content">
        <!-- Default box -->
        <div class="box">
            <div class="box-header with-border">
                <h3 class="box-title"><i class="fa fa-building"></i> @ViewData["Title"]</h3>
                <div class="box-tools pull-right">
                    <button type="button" class="btn btn-box-tool" data-widget="collapse" data-toggle="tooltip"
                            title="Collapse">
                        <i class="fa fa-minus"></i>
                    </button>
                    <button type="button" class="btn btn-box-tool" data-widget="remove" data-toggle="tooltip" title="Remove">
                        <i class="fa fa-times"></i>
                    </button>
                </div>
            </div>
            <div class="box-body">
                <div class="content-container-fluid">
                    <div class="row">
                        <dl class="dl-horizontal">
                            <dt>
                                @Html.DisplayNameFor(model => model.ClinicalTrialsSalesId)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.ClinicalTrialsSalesId)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.ClinicalTrialsSalesName)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.ClinicalTrialsSalesName)
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.CustomerId)
                            </dt>
                            <dd>
                                <input type="text" id="CustomerId" />
                            </dd>
                            <dt>
                                @Html.DisplayNameFor(model => model.UseDate)
                            </dt>
                            <dd>
                                @Html.DisplayFor(model => model.UseDate)
                            </dd>
                           
                        </dl>
                    </div>

                </div>
            </div>
            <!-- /.box-body -->
            <!-- /.box-footer-->
        </div>
        <!-- /.box -->
        <div class="box">

            <div class="box-body">
                <div class="row">
                    <div class="col-lg-12">
                        <div id="Grid"></div>
                    </div>
                </div>
            </div>
        </div>
    </section>
    <!-- /.content -->
</div>
<!-- /.content-wrapper -->

@section Styles{
}
@section Scripts{
    <script type="text/javascript">
        $(function () {

            var dataManager = ej.DataManager({
                url: "/api/ClinicalTrialsSalesLines",
                adaptor: new ej.WebApiAdaptor(),
                headers: [{ "ClinicalTrialsSalesId": @Model.ClinicalTrialsSalesId}],
                offline: true
            });

            var dataManagerProduct = ej.DataManager({
                url: "/api/ClinicalTrialsProducts",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerClinicalTrialsSales = ej.DataManager({
                url: "/api/ClinicalTrialsSales",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerClinicalTrialsDonationLines = ej.DataManager({
                url: "/api/ClinicalTrialsDonationLines",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerCustomer = ej.DataManager({
                url: "/api/Customer",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerCurrency = ej.DataManager({
                url: "/api/Currency",
                adaptor: new ej.WebApiAdaptor()
            });

            var dataManagerSalesType = ej.DataManager({
                url: "/api/SalesType",
                adaptor: new ej.WebApiAdaptor()
            });



            $('#CustomerId').ejDropDownList({
                dataSource: dataManagerCustomer,
                fields: { id: 'CustomerId', text: 'CustomerName', value: 'CustomerId' },
                value: @Model.CustomerId,
                enabled: false,
            });




            dataManager.ready.done(function (e) {
            $("#Grid").ejGrid({
                dataSource: ej.DataManager({
                    json: e.result,
                    adaptor: new ej.remoteSaveAdaptor(),
                    insertUrl: "/api/ClinicalTrialsSalesLines/Insert",
                    updateUrl: "/api/ClinicalTrialsSalesLines/Update",
                    removeUrl: "/api/ClinicalTrialsSalesLines/Remove",
                }),
                toolbarSettings: {
                    showToolbar: true,
                    toolbarItems: ["add", "edit", "delete", "update", "cancel"]
                },
                editSettings: {
                    allowEditing: true,
                    allowAdding: true,
                    allowDeleting: true,
                    showDeleteConfirmDialog: true,

                },
                allowPaging: true,
                columns: [
                    { field: "ClinicalTrialsSalesLineId", headerText: 'Line Id', isPrimaryKey: true, isIdentity: true, visible: false },
                    { field: "ClinicalTrialsSalesId", headerText: 'SO#', defaultValue: @Model.ClinicalTrialsSalesId, foreignKeyField: "ClinicalTrialsSalesId", foreignKeyValue: "ClinicalTrialsSalesName", dataSource: dataManagerClinicalTrialsSales, visible: false },
                    { field: "ClinicalTrialsProductsId", headerText: 'Drug', foreignKeyField: "ClinicalTrialsProductId", foreignKeyValue: "ProductName", dataSource: dataManagerProduct },
                    { field: "ClinicalTrialsDonationLineId", headerText: 'BatchID', foreignKeyField: "ClinicalTrialsDonationLineId", foreignKeyValue: "BatchID", dataSource: dataManagerClinicalTrialsDonationLines },
                    { field: "Quantity", headerText: 'Qty', defaultValue: 1, editType: "numericedit" },
                    { field: "Price", headerText: 'Cost per unit', defaultValue: 0, editType: "numericedit", format: "{0:n2}", visible: false },
                    { field: "Amount", headerText: 'Amount', defaultValue: 0, editType: "numericedit", format: "{0:n2}", visible: false },
                    { field: "DiscountPercentage", headerText: 'Disc %', defaultValue: 0, editType: "numericedit", format: "{0:n2}", visible: false },
                    { field: "DiscountAmount", headerText: 'Disc Amt', defaultValue: 0, editType: "numericedit", format: "{0:n2}", visible: false },
                    { field: "SubTotal", headerText: 'SubTotal', defaultValue: 0, editType: "numericedit", format: "{0:n2}", visible: false },
                    { field: "TaxPercentage", headerText: 'Tax %', defaultValue: 0, editType: "numericedit", format: "{0:n2}", visible: false },
                    { field: "TaxAmount", headerText: 'Tax Amt', defaultValue: 0, editType: "numericedit", format: "{0:n2}", visible: false },
                    { field: "Total", headerText: 'Total', defaultValue: 0, editType: "numericedit", format: "{0:n2}", visible: false },
                ],
                actionComplete: "complete",
                actionFailure: function (args) {
                    if (args.requestType == "save") {
                        var s = ej.parseJSON(args.error.responseText)
                        toastr.warning(s.message, "Cannot make sale");
                    }
                }
            });
            });




        });

        function complete(args) {

            if (args.requestType == 'beginedit') {
                $("#" + this._id + "_dialogEdit").ejDialog({ title: "Edit Record" });
            }
            if (args.requestType == 'beginedit' || args.requestType == 'add') {
                var selected = $('#GridClinicalTrialsDonationLineId').data('ejDropDownList');
                var selectedValue = parseInt(selected.option('value'));
                var selectedText = selected.option('text');
                $.ajax({
                    type: 'GET',
                    url: '/api/ClinicalTrialsDonationLines/GetInstock',
                    success: function (data) {
                        if (args.requestType == 'beginedit') {
                            data.push({ 'ClinicalTrialsDonationLineId': selectedValue, 'BatchID': selectedText });
                        }

                        $("#GridClinicalTrialsDonationLineId").ejDropDownList({
                            dataSource: data,
                            fields: { id: 'ClinicalTrialsDonationLineId', text: 'BatchID', value: 'ClinicalTrialsDonationLineId' },
                            value: selectedValue
                        });
                    }
                });
            }
        }

  
    </script>
}
